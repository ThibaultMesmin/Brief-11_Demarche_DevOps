name: Release

on:
  push:
    branches:
      - main
      
permissions:
  contents: write

jobs:
  get-version:
    uses: shiipou/github-actions/.github/workflows/get-version.yml@main
    with:
      release-branches: '^(main)$'
    
  build:
   name: Build
   runs-on: ubuntu-latest
   if: ${{ needs.get-version.outputs.will-release == 'true' }}
   needs: 
     - get-version

   steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          

  release:
    name: Release
    runs-on: ubuntu-latest
    # récupère que les sorties du job get-version et build (outputs)
    needs:
      - get-version
      - build
      
    steps:
      - name: Install Trunk
        uses: mbround18/trunk-rs@v0.0.1
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: spring
          path: dist/
      - name: Create Github Release
        env:
          VERSION: "${{ needs.get-version.outputs.version }}"
          REPO: "${{ github.repository }}"
          COMMIT: "${{ github.sha }}"
          GH_TOKEN: "${{ github.token }}"
        # $REPO = le repo sur lequel on veut que ça se fasse
        # $COMMIT = le commit en rapport au push (prend donc le bon commit et non le dernier effectué)
        # $VERSION = la version récupérée du get-version
        # GH_TOKEN = connu et généré par github
        run: |
          gh release create --repo $REPO --target $COMMIT $VERSION build/*
    
    
